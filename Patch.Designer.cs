//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Patcher {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Patch {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Patch() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Patcher.Patch", typeof(Patch).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to bsdiff and bspatch are tools for building and applying patches to binary files.
        ///For more information, see http://www.daemonology.net/bsdiff/
        ///
        ///----
        ///
        ///The original bsdiff.c and bspatch.c source code is licensed as follows:
        ///
        ///Copyright 2003-2005 Colin Percival
        ///All rights reserved
        ///
        ///Redistribution and use in source and binary forms, with or without
        ///modification, are permitted providing that the following conditions 
        ///are met:
        ///1. Redistributions of source code must retain the above copyright
        ///    notice, this list of [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bsdiff__net_ReadMe {
            get {
                return ResourceManager.GetString("bsdiff__net_ReadMe", resourceCulture);
            }
        }
        
        internal static byte[] ICSharpCode_SharpZipLib {
            get {
                object obj = ResourceManager.GetObject("ICSharpCode_SharpZipLib", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Logos_Utility {
            get {
                object obj = ResourceManager.GetObject("Logos_Utility", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Microsoft_Xna_Framework {
            get {
                object obj = ResourceManager.GetObject("Microsoft_Xna_Framework", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Microsoft_Xna_Framework_Game {
            get {
                object obj = ResourceManager.GetObject("Microsoft_Xna_Framework_Game", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Microsoft_Xna_Framework_Graphics {
            get {
                object obj = ResourceManager.GetObject("Microsoft_Xna_Framework_Graphics", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] Microsoft_Xna_Framework_Xact {
            get {
                object obj = ResourceManager.GetObject("Microsoft_Xna_Framework_Xact", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static byte[] TerrariaConfigMod {
            get {
                object obj = ResourceManager.GetObject("TerrariaConfigMod", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
